"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'plc.apps.PlcConfig',
    'django_cleanup.apps.CleanupConfig',
    'crispy_forms',
    'crispy_bootstrap5'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'django_permissions_policy_PermissionsPolicyMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'csp.middleware.CSPMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# SQLite DB settings:
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# Postgres DB settings:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'

CRISPY_TEMPLATE_PACK = 'bootstrap5'

# Django-permissions settings

# PERMISSIONS_POLICY = {
#     "accelerometer": [],
#     "ambient-light-sensor": [],
#     "autoplay": [],
#     "display-capture": [],
#     "document-domain": [],
#     "encrypted-media": [],
#     "geolocation": [],
#     "gyroscope": [],
#     "interest-cohort": [],
#     "magnetometer": [],
#     "microphone": [],
#     "midi": [],
#     "payment": [],
#     "usb": [],
# }

# django-csp headers:

# CSP_STYLE_SRC = (
#     "'self'",
#     "use.fontawesome.com",
#     "fonts.googleapis.com",
#     "'unsafe-inline'",
#     "*.tiny.cloud",
#     "*.tinymce.com",
#     )

# CSP_SCRIPT_SRC = ("'self'",
#     "static.cloudflareinsights.com",
#     "maps.googleapis.com",
#     "www.google-analytics.com",
#     "ssl.google-analytics.com",
#     "cdn.ampproject.org",
#     "www.googletagservices.com",
#      "*.tinymce.com",
#      "*.tiny.cloud",
#      )

# CSP_IMG_SRC = ("'self'",
#     "www.google-analytics.com",
#     "raw.githubusercontent.com",
#     "googleads.g.doubleclick.net",
#     "*.googleapis.com",
#     "*.ggpht",
#     "*.tinymce.com",
#     "*.tiny.cloud",
#     "data:",
#     "blob:",
#     )

# CSP_FONT_SRC = ("'self'",
#     "cdnjs.cloudflare.com",
#     "use.fontawesome.com",
#     "fonts.gstatic.com",
#     "*.tinymce.com",
#     "*.tiny.cloud",
#     "data:",
#     )

# CSP_CONNECT_SRC = ("'self'",
#     "www.google-analytics.com",
#     "*.tinymce.com",
#      "*.tiny.cloud",)
# CSP_OBJECT_SRC = ("'none'", )
# CSP_BASE_URI = ("'self'", )
# CSP_FRAME_ANCESTORS = ("'self'" )
# CSP_FORM_ACTION = (
#     "'self'",
#     )
# CSP_INCLUDE_NONCE_IN = ('script-src', 'style-src' )
# CSP_MANIFEST_SRC = ("'self'", )
# CSP_WORKER_SRC = ("'self'", )
# CSP_MEDIA_SRC = ("'self'", )
# CSP_CONNECT_SRC = ("'self'",)
# CSP_DEFAULT_SRC = ("'none'",)


# Security settings for production:

# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True

# SECURE_BROWSER_XSS_FILTER = True
# SECURE_CONTENT_TYPE_NOSNIFF = True

# SECURE_HSTS_SECONDS = 15768000
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True

# SECURE_REFERRER_POLICY = "no-referrer-when-downgrade"
